// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// HostRequestedOdfMode host requested odf mode
//
// swagger:model host-requested-odf-mode
type HostRequestedOdfMode string

func NewHostRequestedOdfMode(value HostRequestedOdfMode) *HostRequestedOdfMode {
	v := value
	return &v
}

const (

	// HostRequestedOdfModeEnableDefault captures enum value "enable(default)"
	HostRequestedOdfModeEnableDefault HostRequestedOdfMode = "enable(default)"

	// HostRequestedOdfModeDisable captures enum value "disable"
	HostRequestedOdfModeDisable HostRequestedOdfMode = "disable"
)

// for schema
var hostRequestedOdfModeEnum []interface{}

func init() {
	var res []HostRequestedOdfMode
	if err := json.Unmarshal([]byte(`["enable(default)","disable"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		hostRequestedOdfModeEnum = append(hostRequestedOdfModeEnum, v)
	}
}

func (m HostRequestedOdfMode) validateHostRequestedOdfModeEnum(path, location string, value HostRequestedOdfMode) error {
	if err := validate.EnumCase(path, location, value, hostRequestedOdfModeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this host requested odf mode
func (m HostRequestedOdfMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateHostRequestedOdfModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this host requested odf mode based on context it is used
func (m HostRequestedOdfMode) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
